// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: session.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const CreateSession = `-- name: CreateSession :one
INSERT INTO sessions (
  id, user_id, expires_at
) VALUES (
  $1, $2, $3
)
RETURNING id, user_id, expires_at
`

type CreateSessionParams struct {
	ID        string           `json:"id"`
	UserID    string           `json:"user_id"`
	ExpiresAt pgtype.Timestamp `json:"expires_at"`
}

func (q *Queries) CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error) {
	row := q.db.QueryRow(ctx, CreateSession, arg.ID, arg.UserID, arg.ExpiresAt)
	var i Session
	err := row.Scan(&i.ID, &i.UserID, &i.ExpiresAt)
	return i, err
}

const GetSession = `-- name: GetSession :one
SELECT
  sessions.id,
  sessions.user_id,
  sessions.expires_at
FROM
  sessions
WHERE
  sessions.id = $1
`

func (q *Queries) GetSession(ctx context.Context, id string) (Session, error) {
	row := q.db.QueryRow(ctx, GetSession, id)
	var i Session
	err := row.Scan(&i.ID, &i.UserID, &i.ExpiresAt)
	return i, err
}
